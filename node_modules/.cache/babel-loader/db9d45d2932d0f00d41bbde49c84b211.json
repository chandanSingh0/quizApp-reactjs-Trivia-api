{"ast":null,"code":"var _jsxFileName = \"D:\\\\quizAppReactjs\\\\react-quiz-app\\\\src\\\\components\\\\Questions\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    currQues,\n    setCurrQues,\n    questions,\n    options,\n    correct,\n    setScore,\n    score,\n    setQuestions\n  } = _ref;\n  const [selected, setSelected] = useState();\n  const [error, setError] = useState(false);\n\n  const handleSelect = i => {\n    if (selected === i && selected === correct) return \"select\";else if (selected === i && selected !== correct) return \"wrong\";else if (i === correct) return \"select\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Question \", currQues + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleQuestion\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currQues].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), options && options.map(i => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `singleOption  ${selected && handleSelect(i)}`,\n          onClick: () => handleCheck(i),\n          disabled: selected,\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"gmYn12drz6bkEaxkuIgtbgvTLf8=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useState","Question","currQues","setCurrQues","questions","options","correct","setScore","score","setQuestions","selected","setSelected","error","setError","handleSelect","i","question","map","handleCheck"],"sources":["D:/quizAppReactjs/react-quiz-app/src/components/Questions/Question.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Question = ({\r\n  currQues,\r\n  setCurrQues,\r\n  questions,\r\n  options,\r\n  correct,\r\n  setScore,\r\n  score,\r\n  setQuestions,\r\n}) => {\r\n  const [selected, setSelected] = useState();\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSelect = (i) => {\r\n    if (selected === i && selected === correct) return \"select\";\r\n    else if (selected === i && selected !== correct) return \"wrong\";\r\n    else if (i === correct) return \"select\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Question {currQues + 1}</h1>\r\n      <div className=\"singleQuestion\">\r\n        <h2>{questions[currQues].question}</h2>\r\n        <div className=\"options\">\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          {options &&\r\n            options.map((i) => (\r\n              <button\r\n                className={`singleOption  ${selected && handleSelect(i)}`}\r\n                key={i}\r\n                onClick={() => handleCheck(i)}\r\n                disabled={selected}\r\n              >\r\n                {i}\r\n              </button>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,QASX;EAAA;;EAAA,IATY;IAChBC,QADgB;IAEhBC,WAFgB;IAGhBC,SAHgB;IAIhBC,OAJgB;IAKhBC,OALgB;IAMhBC,QANgB;IAOhBC,KAPgB;IAQhBC;EARgB,CASZ;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;EAEA,MAAMc,YAAY,GAAIC,CAAD,IAAO;IAC1B,IAAIL,QAAQ,KAAKK,CAAb,IAAkBL,QAAQ,KAAKJ,OAAnC,EAA4C,OAAO,QAAP,CAA5C,KACK,IAAII,QAAQ,KAAKK,CAAb,IAAkBL,QAAQ,KAAKJ,OAAnC,EAA4C,OAAO,OAAP,CAA5C,KACA,IAAIS,CAAC,KAAKT,OAAV,EAAmB,OAAO,QAAP;EACzB,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA,wBAAcJ,QAAQ,GAAG,CAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QAAA,UAAKE,SAAS,CAACF,QAAD,CAAT,CAAoBc;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,SAAf;QAAA,WACGJ,KAAK,iBAAI,QAAC,YAAD;UAAA,UAAeA;QAAf;UAAA;UAAA;UAAA;QAAA,QADZ,EAEGP,OAAO,IACNA,OAAO,CAACY,GAAR,CAAaF,CAAD,iBACV;UACE,SAAS,EAAG,iBAAgBL,QAAQ,IAAII,YAAY,CAACC,CAAD,CAAI,EAD1D;UAGE,OAAO,EAAE,MAAMG,WAAW,CAACH,CAAD,CAH5B;UAIE,QAAQ,EAAEL,QAJZ;UAAA,UAMGK;QANH,GAEOA,CAFP;UAAA;UAAA;UAAA;QAAA,QADF,CAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAzCD;;GAAMd,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}